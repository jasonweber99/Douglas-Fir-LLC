<h1>Calendar Options</h1>
<h2>Option 1: Google Calendar</h2>
<h3>Summary</h3>
<p>Google Calendar (GC) is a calendar service used by millions of people. The GC API offers the ability to create calendars and events for those calendars. For our implementation, we will use a single calendar for events in Monmouth and Independence, managed by a single <a href="https://developers.google.com/identity/protocols/oauth2/service-account">Google service account</a>. Using a Google service account to manage calendar events bypasses the need for each individual business and admin user to sign in with their own google account and instead allows all events to be created under a single account managed by our server. After the calendar is <a href="https://support.google.com/calendar/answer/41207?hl=en">added to a webpage</a>, users will be able to interact with events and copy them to their own calendar if they have a Google account. Unfortunately, there is no built in method to allow users to RSVP to a calendar event without manually creating a form which then updates the calendar event with the attendee. On top of this, we cannot modify what happens when a user clicks on an event, so we are left with a rather unhelpful display of the calendar.</p>

<h3>Pricing</h3>
<p>The GC API is a free service which allows up to 1,000,000 API calls per day. More specifically, up to 1,000,000 events or event modifications are allowed per day. Imbedding a google calendar in a website does not require API access and is instead included by pasting HTML generated from the GC web application. Thus, a calendar may be displayed an unlimited number of times per day. It is unlikely that the Monmouth-Independence Visitor Center website will ever run into quota issues using the GC API.</p>

<h3>Example</h3>
<p>Actual imbedded GC.</p>
<object data="https://calendar.google.com/calendar/embed?src=jweber18%40mail.wou.edu&ctz=America%2FLos_Angeles" style="border: 0" width="800" height="600"></object>


<h2>Option 2: FullCalendar With Created API</h2>
<h3>Summary</h3>
<p>FullCalendar (FC) is a JavaScript calendar that <a href="https://fullcalendar.io/docs/event-source-object">receives JSON data from an API</a> in order to display events. This API will be an API endpoint from our own server. While google calendar allows little to no customization of its imbedded calendars, the free version of FC allows us to display events using a variety of colors and <a href="https://fullcalendar.io/docs/theming">themes</a>. In addition, FC allows for <a href="https://fullcalendar.io/docs/handlers">dynamic event handlers</a>, letting us choose what happens when an event is clicked (like going to a details and/or RSVP page). The downside of this implementation is that we are unable to email a Google Calendar invite to handle RSVP's like we can with the Google Calendar API. Instead, we have to manually keep track of whether or not users have RSVPed and somehow implement a way to un-RSVP without requiring user accounts.</p>

<h3>Pricing</h3>
<p>All of the features mentioned above are included in the free version of FC.</p>

<h3>Example</h3>
<p>A screenshot of the demo included <a href="https://fullcalendar.io/demos">FC's website</a>.</p>
<img src="~/assets/FCDemo.jpg" alt="A picture showing the calendar demo from FC's website" />


<h2>Option 3: FullCalendar With Google Calendar API</h2>
<h3>Summary</h3>
<p>We may also set Full Calendar's event source to be a Google Calendar. This would provide us with the display customization of Full Calendar while still allowing us to utilize the invite and RSVP functionality of the Google Calendar API. The only downside to this method is that it will be much more difficult to implement and will thus take up more development time and be more prone to error. Despite this added complexity, I recommend going with this option since it is the implementation that adds the most value to our users.</p>

<h3>Pricing</h3>
<p>Since this implementation will combine the previous two free implementations, it will also be free.</p>